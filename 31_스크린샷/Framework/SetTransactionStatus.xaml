<Activity mc:Ignorable="sap sap2010" x:Class="SetTransactionStatus" this:SetTransactionStatus.in_Obj_TransactionItem="[Nothing]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="[입력] 비지니스에러" Name="in_BusinessException" Type="InArgument(ui:BusinessRuleException)" />
    <x:Property sap2010:Annotation.AnnotationText="[입력] 시스템에러" Name="in_SystemException" Type="InArgument(s:Exception)" />
    <x:Property sap2010:Annotation.AnnotationText="[입력] 트랜잭션 추가정보1" Name="in_Str_TransactionField1" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="[입력] 트랜잭션 추가정보2" Name="in_Str_TransactionField2" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="[입력] 트랜잭션ID (고유한 값)" Name="in_Str_TransactionID" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="환경설정객체(Config)" Name="in_Dic_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="[입력] 처리된 트랜잭션 항목" Name="in_Obj_TransactionItem" Type="InArgument(x:Object)" />
    <x:Property sap2010:Annotation.AnnotationText="[입출력] 시스템 예외의 경우 재시도 횟수" Name="inout_Int_RetryNumber" Type="InOutArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="[입출력] 트랜잭션번호 (성공시 트랜잭션 번호 증가)" Name="inout_Int_TransactionNumber" Type="InOutArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="[입출력] 시스템에러 발생 횟수" Name="inout_Int_ConsecutiveSystemExceptions" Type="InOutArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1234,1090</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SetTransactionStatus_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="52">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="84">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart sap2010:Annotation.AnnotationText="트랜잭션 상태 설정 (성공, 비지니스에러, 시스템에러의 세가지 상태)&#xA;&#xA;- 비지니스에러 : 트랜잭션은 재시도 되지 않고 해당 트랜잭션은 처리되지 않음&#xA;- 시스템에러 : 비지니스에러 이외의 에러로 트랜잭션은 재시도 횟수만큼 재시도 수행&#xA;&#xA;오케스트레이터의 큐 사용시 상태 업데이트와 재시 메커니즘을 오케스트레이터에서 구현&#xA;그 외의 경우 환경설정객체(Config)에 정의한 횟수만큼 재시도하도록 프레임워크에서 구현&#xA;&#xA;다음 트랜잭션 처리 진행에 필요한 트랜잭션번호(io_TransactionNumber) 증가" DisplayName="Set Transaction Status" sap:VirtualizedContainerService.HintSize="722,1025" sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Width">687.9999999999999</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 298.8,107.5 298.8,126.4</av:PointCollection>
        <x:Double x:Key="Height">840.8</x:Double>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID5</x:Reference>
    </Flowchart.StartNode>
    <FlowDecision x:Name="__ReferenceID5" Condition="[in_BusinessException is Nothing and in_SystemException is Nothing]" DisplayName="성공했는가?" sap:VirtualizedContainerService.HintSize="72,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">262.8,126.4</av:Point>
          <av:Size x:Key="ShapeSize">72,87</av:Size>
          <av:PointCollection x:Key="FalseConnector">334.8,169.9 442,169.9 442,266.4</av:PointCollection>
          <av:PointCollection x:Key="TrueConnector">262.8,169.9 110,169.9 110,471.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowDecision.True>
        <FlowStep x:Name="__ReferenceID4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">10,471.6</av:Point>
              <av:Size x:Key="ShapeSize">200,138</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">110,609.6 110,639.6 210,639.6 210,715.6</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="에러 없이 트랜잭션이 처리되면 해당 상태는 성공으로 업데이트 " DisplayName="성공 상태 처리" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[in_Obj_TransactionItem isNot Nothing AndAlso CBool(in_Dic_Config(&quot;UseQueue&quot;))]" DisplayName="If 트랜잭션 항목이 큐아이템인 경우 (성공)" sap:VirtualizedContainerService.HintSize="566,1356" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <ui:RetryScope DisplayName="Retry Scope 트랜잭션 상태 설정 (성공) 재시도 대응" sap:VirtualizedContainerService.HintSize="532,1174" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="[Cint(in_Dic_Config(&quot;RetryNumberSetTransactionStatus&quot;))]">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <TryCatch DisplayName="Try Catch 트랜잭션 상태 설정 (성공) 처리시 에러 발생 대응" sap:VirtualizedContainerService.HintSize="490,999" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                        <TryCatch.Try>
                          <Sequence DisplayName="트랜잭션 상태 설정 (성공)" sap:VirtualizedContainerService.HintSize="450,302" sap2010:WorkflowViewState.IdRef="Sequence_30">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" DisplayName="Set transaction status 오케스트레이터 (성공)" ErrorType="Application" FolderPath="[in_Dic_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="388,191" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_4" Status="Successful" TransactionItem="[Ctype(in_Obj_TransactionItem, QueueItem)]">
                              <ui:SetTransactionStatus.Analytics>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                              </ui:SetTransactionStatus.Analytics>
                              <ui:SetTransactionStatus.Details>
                                <InArgument x:TypeArguments="x:String" />
                              </ui:SetTransactionStatus.Details>
                              <ui:SetTransactionStatus.Output>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                              </ui:SetTransactionStatus.Output>
                              <ui:SetTransactionStatus.Reason>
                                <InArgument x:TypeArguments="x:String" />
                              </ui:SetTransactionStatus.Reason>
                              <ui:SetTransactionStatus.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:SetTransactionStatus.TimeoutMS>
                            </ui:SetTransactionStatus>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="456,386" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Catch 트랜잭션 상태 설정 (성공) 처리시 에러 발생" sap:VirtualizedContainerService.HintSize="450,317" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message 트랜잭션 상태 설정 (성공) 에러 로그 출력" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Warn" Message="[&quot;Could not set the transaction status. &quot;+exception.Message+&quot; At Source: &quot;+exception.Source]" />
                                <Rethrow DisplayName="Rethrow 트랜잭션 상태 설정 (성공) 에러 던지기" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                </ui:RetryScope>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_25" />
              </If.Else>
            </If>
            <Sequence sap2010:Annotation.AnnotationText="해당 트랜잭션을 특정할 수 있도록 중복된 상태 메시지 출력 방지를 위해 로그 필드 추가하여 로그 출력" DisplayName="성공 로그 출력" sap:VirtualizedContainerService.HintSize="566,554" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:AddLogFields DisplayName="Add Log Fields 트랜잭션 (성공) 로그 필드 추가" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="AddLogFields_4">
                <ui:AddLogFields.Fields>
                  <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">Success</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[inout_Int_TransactionNumber.ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionID">[in_Str_TransactionID]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField1">[in_Str_TransactionField1]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField2">[in_Str_TransactionField2]</InArgument>
                </ui:AddLogFields.Fields>
              </ui:AddLogFields>
              <ui:LogMessage DisplayName="Log Message 트랜잭션 (성공) 로그 출력" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[in_Dic_Config(&quot;LogMessage_Success&quot;).ToString]" />
              <ui:RemoveLogFields DisplayName="Remove Log Fields 트랜잭션 (성공) 로그 필드 제거" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="RemoveLogFields_4">
                <ui:RemoveLogFields.Fields>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                    <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                    <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                    <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                    <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                    <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                  </scg:List>
                </ui:RemoveLogFields.Fields>
              </ui:RemoveLogFields>
            </Sequence>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID0">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">110,715.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,81</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="성공 또는 비지니스에러 상태에서 변수 설정" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="트랜잭션번호를 1 증가시켜 다음 트랜잭션번호 설정" DisplayName="Assign 다음 트랜잭션번호 설정" sap:VirtualizedContainerService.HintSize="532,113" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[inout_Int_TransactionNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[inout_Int_TransactionNumber+1]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="재시도 횟수 초기화" DisplayName="Assign 재시도 횟수 초기화" sap:VirtualizedContainerService.HintSize="532,113" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[inout_Int_RetryNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="532,303" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="496,224" sap2010:WorkflowViewState.IdRef="Sequence_38">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="시스템에러 발생 횟수 초기화" DisplayName="Assign 시스템에러 발생 횟수 초기화" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[inout_Int_ConsecutiveSystemExceptions]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">1</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
              </Sequence>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowDecision.True>
      <FlowDecision.False>
        <FlowDecision x:Name="__ReferenceID1" Condition="[in_BusinessException isnot Nothing]" DisplayName="비지니스에러인가?" sap:VirtualizedContainerService.HintSize="108,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">388,266.4</av:Point>
              <av:Size x:Key="ShapeSize">108,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">388,309.733333333333 330,309.733333333333 330,469.333333333333</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">496,309.9 550,309.9 550,467.666666666667</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">230,469.333333333333</av:Point>
                  <av:Size x:Key="ShapeSize">200,138</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">330,607.333333333333 330,756.1 310,756.1</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="해당 상태를 비지니스에러 (실패) 업데이트&#xA;" DisplayName="비지니스에러 상태 처리" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[in_Obj_TransactionItem isNot Nothing AndAlso CBool(in_Dic_Config(&quot;UseQueue&quot;))]" DisplayName="If 트랜잭션 항목이 큐아이템 인 경우 (비지니스에러)" sap:VirtualizedContainerService.HintSize="566,1682" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <ui:RetryScope DisplayName="Retry Scope 트랜잭션 상태 설정 (비지니스에러) 재시도 대응" sap:VirtualizedContainerService.HintSize="532,1500" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="[Cint(in_Dic_Config(&quot;RetryNumberSetTransactionStatus&quot;))]">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <TryCatch DisplayName="Try Catch 트랜잭션 상태 설정 (비지니스에러) 처리시 에러 발생 대응" sap:VirtualizedContainerService.HintSize="490,1165" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="트랜잭션 상태 설정 (비지니스에러)" sap:VirtualizedContainerService.HintSize="450,353" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" DisplayName="Set transaction status 오케스트레이터 (비지니스에러)" ErrorType="Business" FolderPath="[in_Dic_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="388,242" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_5" Reason="[in_BusinessException.Message]" Status="Failed" TransactionItem="[Ctype(in_Obj_TransactionItem, QueueItem)]">
                                  <ui:SetTransactionStatus.Analytics>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                  </ui:SetTransactionStatus.Analytics>
                                  <ui:SetTransactionStatus.Details>
                                    <InArgument x:TypeArguments="x:String" />
                                  </ui:SetTransactionStatus.Details>
                                  <ui:SetTransactionStatus.Output>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                  </ui:SetTransactionStatus.Output>
                                  <ui:SetTransactionStatus.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:SetTransactionStatus.TimeoutMS>
                                </ui:SetTransactionStatus>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="456,386" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Catch 트랜잭션 상태 설정 (비지니스에러) 처리시 에러 발생" sap:VirtualizedContainerService.HintSize="450,317" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message 트랜잭션 상태 설정 (비지니스에러) 에러 로그 출력" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Warn" Message="[&quot;Could not set the transaction status. &quot;+exception.Message+&quot; At Source: &quot;+exception.Source]" />
                                    <Rethrow DisplayName="Rethrow 트랜잭션 상태 설정 (비지니스에러) 에러 던지기" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_26" />
                  </If.Else>
                </If>
                <Sequence sap2010:Annotation.AnnotationText="해당 트랜잭션을 특정할 수 있도록 중복된 상태 메시지 출력 방지를 위해 로그 필드 추가하여 로그 출력" DisplayName="비지니스에러 로그 출력" sap:VirtualizedContainerService.HintSize="566,554" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AddLogFields DisplayName="Add Log Fields 트랜잭션 (비지니스에러)로그 필드 추가" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                    <ui:AddLogFields.Fields>
                      <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">BusinessException</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[inout_Int_TransactionNumber.ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionID">[in_Str_TransactionID]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField1">[in_Str_TransactionField1]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField2">[in_Str_TransactionField2]</InArgument>
                    </ui:AddLogFields.Fields>
                  </ui:AddLogFields>
                  <ui:LogMessage DisplayName="Log Message 트랜잭션 (비지니스에러) 로그 출력" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[in_Dic_Config(&quot;LogMessage_BusinessRuleException&quot;).ToString + in_BusinessException.Message]" />
                  <ui:RemoveLogFields DisplayName="Remove Log Fields 트랜잭션 (비지니스에러) 로그 필드 제거" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="RemoveLogFields_5">
                    <ui:RemoveLogFields.Fields>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                        <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                        <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                        <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                        <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                        <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                      </scg:List>
                    </ui:RemoveLogFields.Fields>
                  </ui:RemoveLogFields>
                </Sequence>
              </Sequence>
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">450,467.666666666667</av:Point>
                  <av:Size x:Key="ShapeSize">200,123</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="해당 상태를 시스템에러 (실패) 업데이트" DisplayName="시스템에러 상태 처리" sap:VirtualizedContainerService.HintSize="672,5469" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="오케스트레이터 큐아이템인지 여부" Name="Bln_QueueRetry" />
                  <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="스트린샷 이미지 파일 경로" Name="Str_ScreenshotPath" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message 시스템에러 발생횟수 로그 출력" sap:VirtualizedContainerService.HintSize="610,141" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Consecutive system exception counter is &quot; + inout_Int_ConsecutiveSystemExceptions.ToString + &quot;.&quot;]" />
                <Assign DisplayName="Assign 트랜잭션 항목이 큐아이템인지 여부 설정" sap:VirtualizedContainerService.HintSize="610,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[Bln_QueueRetry]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">[in_Obj_TransactionItem isNot Nothing AndAlso CBool(in_Dic_Config("UseQueue"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <TryCatch sap2010:Annotation.AnnotationText="디버깅용 화면 스크린샷 진행" DisplayName="Try Catch 스크린샷 에러 대응" sap:VirtualizedContainerService.HintSize="610,697" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow 스크린샷 이미지 저장" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Str_Folder">[in_Dic_Config("ExScreenshotsFolderPath").ToString]</InArgument>
                        <InOutArgument x:TypeArguments="x:String" x:Key="inout_Str_FilePath">[Str_ScreenshotPath]</InOutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,210" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <ui:LogMessage DisplayName="Log message 스크린샷 저장 에러 로그 출력" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;Failed to take screenshot: &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source+&quot; At Source: &quot;+Exception.Source]" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <If Condition="[Bln_QueueRetry]" DisplayName="If 트랜잭션 항목이 큐아이템 인 경우 (시스템에러)" sap:VirtualizedContainerService.HintSize="610,2124" sap2010:WorkflowViewState.IdRef="If_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <ui:RetryScope DisplayName="Retry Scope 트랜잭션 상태 설정 (시스템에러) 재시도 대응" sap:VirtualizedContainerService.HintSize="576,1942" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[Cint(in_Dic_Config(&quot;RetryNumberSetTransactionStatus&quot;))]">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <TryCatch DisplayName="Try Catch 트랜잭션 상태 설정 (시스템에러) 처리시 에러 발생 대응" sap:VirtualizedContainerService.HintSize="534,1447" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                            <TryCatch.Try>
                              <Sequence DisplayName="트랜잭션 상태 설정 (시스템에러) 처리" sap:VirtualizedContainerService.HintSize="496,475" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" Details="[if(String.IsNullOrEmpty(Str_ScreenshotPath),String.Empty,&quot;Screenshot: &quot;+ Str_ScreenshotPath)]" DisplayName="Set transaction status 오케스트레이터 (시스템에러)" ErrorType="Application" FolderPath="[in_Dic_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="434,242" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_8" Reason="[String.Format(&quot;Exception message: {0} at source: {1}.&quot;,in_SystemException.Message,in_SystemException.Source)]" Status="Failed" TransactionItem="[Ctype(in_Obj_TransactionItem, QueueItem)]">
                                  <ui:SetTransactionStatus.Analytics>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                  </ui:SetTransactionStatus.Analytics>
                                  <ui:SetTransactionStatus.Output>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                  </ui:SetTransactionStatus.Output>
                                  <ui:SetTransactionStatus.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:SetTransactionStatus.TimeoutMS>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SetTransactionStatus>
                                <Assign DisplayName="Assign 큐아이템으로부터 재시도 횟수 추출하여 설정" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_11">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[inout_Int_RetryNumber]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[Ctype(in_Obj_TransactionItem, QueueItem).RetryNo + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,386" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Catch 트랜잭션 상태 설정 (시스템에러) 처리시 에러 발생" sap:VirtualizedContainerService.HintSize="450,317" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message 트랜잭션 상태 설정 (시스템에러) 에러 로그 출력" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Warn" Message="[&quot;Could not set the transaction status. &quot;+exception.Message]" />
                                    <Rethrow DisplayName="Rethrow 트랜잭션 상태 설정 (시스템에러) 에러 던지기" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:AddLogFields DisplayName="Add Log Fields 트랜잭션 (시스템에러) 필드 추가" sap:VirtualizedContainerService.HintSize="610,90" sap2010:WorkflowViewState.IdRef="AddLogFields_6">
                  <ui:AddLogFields.Fields>
                    <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionStatus">ApplicationException</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionNumber">[inout_Int_TransactionNumber.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionID">[in_Str_TransactionID]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField1">[in_Str_TransactionField1]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="logF_TransactionField2">[in_Str_TransactionField2]</InArgument>
                  </ui:AddLogFields.Fields>
                </ui:AddLogFields>
                <Assign DisplayName="Assign 시스템에러 발생 횟수 1 증가" sap:VirtualizedContainerService.HintSize="610,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[inout_Int_ConsecutiveSystemExceptions]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[inout_Int_ConsecutiveSystemExceptions + 1]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow 트랜잭션 재시도 관리 호출" sap:VirtualizedContainerService.HintSize="610,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework/RetryCurrentTransaction.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[in_SystemException]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Dic_Config">[in_Dic_Config]</InArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="inout_Int_RetryNumber">[inout_Int_RetryNumber]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="inout_Int_TransactionNumber">[inout_Int_TransactionNumber]</InOutArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_Bln_QueueRetry">[Bln_QueueRetry]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:RemoveLogFields DisplayName="Remove Log Fields 트랜잭션 (시스템에러) 로그 필드 제거" sap:VirtualizedContainerService.HintSize="610,90" sap2010:WorkflowViewState.IdRef="RemoveLogFields_6">
                  <ui:RemoveLogFields.Fields>
                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                      <InArgument x:TypeArguments="x:String">logF_TransactionStatus</InArgument>
                      <InArgument x:TypeArguments="x:String">logF_TransactionNumber</InArgument>
                      <InArgument x:TypeArguments="x:String">logF_TransactionID</InArgument>
                      <InArgument x:TypeArguments="x:String">logF_TransactionField1</InArgument>
                      <InArgument x:TypeArguments="x:String">logF_TransactionField2</InArgument>
                    </scg:List>
                  </ui:RemoveLogFields.Fields>
                </ui:RemoveLogFields>
                <TryCatch sap2010:Annotation.AnnotationText="모든 어플리케이션을 닫고 초기화 상태로 돌아가 다시 열기&#xA;닫을 수 없을 경우 강제종료 실시" DisplayName="Try Catch 어플리케이션 닫기 에러 대응" sap:VirtualizedContainerService.HintSize="610,1556" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="모든 어플리케이션 종료처리 후 닫기" DisplayName="Invoke Workflow 어플리케이션 닫기" sap:VirtualizedContainerService.HintSize="334,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="506,1027" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="모든 어플리케이션 닫기처리에서 에러 발생시 강제종료 실시" sap:VirtualizedContainerService.HintSize="500,958" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log message 닫기 에러 발생 로그 출력" sap:VirtualizedContainerService.HintSize="438,141" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[&quot;CloseAllApplications failed. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                          <TryCatch DisplayName="Try Catch 프로세스 강제종료" sap:VirtualizedContainerService.HintSize="438,666" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow 프로세스 강제종료" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,210" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log message 프로세스 강제종료 에러 발생 로그 출력" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;KillAllProcesses failed. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </Sequence>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowDecision.False>
    </FlowDecision>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>